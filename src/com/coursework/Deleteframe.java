/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.coursework;

import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class Deleteframe extends javax.swing.JFrame {

    boolean errorFound = false;
    boolean fileSaved = true;

    public Deleteframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        ReturnHomeButton = new javax.swing.JButton();
        DeleteBookLabel = new javax.swing.JLabel();
        DeleteRowButton = new javax.swing.JButton();
        DropTableButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataTecordTable = new javax.swing.JTable();
        DataRecord = new javax.swing.JLabel();
        BookLandLabel = new javax.swing.JLabel();
        Slogan = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        Import = new javax.swing.JMenuItem();
        Export = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        manualGuide = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BOOK LAND");

        jPanel1.setBackground(new java.awt.Color(154, 185, 115));

        ReturnHomeButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        ReturnHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/home-icon.png"))); // NOI18N
        ReturnHomeButton.setText("Return Home");
        ReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHomeButtonActionPerformed(evt);
            }
        });

        DeleteBookLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        DeleteBookLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Delete-icon.png"))); // NOI18N
        DeleteBookLabel.setText("Delete Book");

        DeleteRowButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        DeleteRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Delete-icon.png"))); // NOI18N
        DeleteRowButton.setText("Delete Row");
        DeleteRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRowButtonActionPerformed(evt);
            }
        });

        DropTableButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        DropTableButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/drop-icon.png"))); // NOI18N
        DropTableButton.setText("Drop Table");
        DropTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(ReturnHomeButton)
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(DeleteBookLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DropTableButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DeleteRowButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(DeleteBookLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(DeleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(DropTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(ReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel2.setBackground(new java.awt.Color(154, 185, 115));

        DataTecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Name", "Category", "Author", "Editions", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DataTecordTable);

        DataRecord.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        DataRecord.setText("Data Records");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(DataRecord)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(DataRecord)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        BookLandLabel.setFont(new java.awt.Font("Harrington", 1, 24)); // NOI18N
        BookLandLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Bookland.png"))); // NOI18N
        BookLandLabel.setText("Book Land");

        Slogan.setFont(new java.awt.Font("Segoe Script", 0, 16)); // NOI18N
        Slogan.setText("A book wormâ€™s paradise...");

        File.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/File-icon.png"))); // NOI18N
        File.setText("File");

        Import.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Import.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Excel-icon.png"))); // NOI18N
        Import.setText("Import Excel");
        Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportActionPerformed(evt);
            }
        });
        File.add(Import);

        Export.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        Export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/Excel-icon.png"))); // NOI18N
        Export.setText("Export Excel");
        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });
        File.add(Export);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/close-icon.png"))); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        jMenuBar1.add(File);

        Help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/help.png"))); // NOI18N
        Help.setText("Help");

        manualGuide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        manualGuide.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coursework/icons/guide-icon.png"))); // NOI18N
        manualGuide.setText("User Manual Guide");
        manualGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualGuideActionPerformed(evt);
            }
        });
        Help.add(manualGuide);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(BookLandLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(Slogan)))
                .addContainerGap(269, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BookLandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Slogan)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        setBounds(460, 100, 856, 602);
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRowButtonActionPerformed

        DefaultTableModel model = (DefaultTableModel) DataTecordTable.getModel();
        //get selected row index
        try {
            int SelectedRowIndex = DataTecordTable.getSelectedRow();
            model.removeRow(SelectedRowIndex);
            JOptionPane.showMessageDialog(this, "This row has been deleted successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Row has not been seleted or table has not been imported","Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_DeleteRowButtonActionPerformed

    private void ReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHomeButtonActionPerformed

        Homeframe home_frame = new Homeframe();
        home_frame.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_ReturnHomeButtonActionPerformed

    private void DropTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropTableButtonActionPerformed
        if (DataTecordTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Nothing to Drop", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {

            DefaultTableModel dm = (DefaultTableModel) DataTecordTable.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();

            JOptionPane.showMessageDialog(this, "Table has been droppes successfully", "Information", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_DropTableButtonActionPerformed

    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed
        errorFound = false;

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to Save");
        int userSelection = fileChooser.showSaveDialog(this);
        fileChooser.addChoosableFileFilter((new FileNameExtensionFilter("Txt", ".csv", ".txt")));

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File filetosave = fileChooser.getSelectedFile();
            String filePath = filetosave.getPath();
            filetosave = new File(filePath + ".csv");
            try {
                try ( FileWriter fw = new FileWriter(filetosave);  BufferedWriter bw = new BufferedWriter(fw)) {
                    bw.write("Book ID,Book Name,Category,Author,Edition,Price");
                    bw.newLine();
                    for (int i = 0; i < DataTecordTable.getRowCount(); i++) {
                        for (int j = 0; j < DataTecordTable.getColumnCount(); j++) {
                            bw.write(DataTecordTable.getValueAt(i, j).toString() + ",");
                        }
                        bw.newLine();
                    }
                    JOptionPane.showMessageDialog(this, "Loaded Sucessfully", "Sucess", JOptionPane.INFORMATION_MESSAGE);

                }

                fileSaved = true;

                errorFound = false;
            } catch (HeadlessException | IOException e) {
                JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
                errorFound = true;
            }

        }
    }//GEN-LAST:event_ExportActionPerformed

    private void manualGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualGuideActionPerformed
        File file = new File("src\\Help\\User Manual Guide.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File not found");
        }
    }//GEN-LAST:event_manualGuideActionPerformed

    private void ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportActionPerformed
        String filename;
        JFileChooser choose = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("files", "csv", "txt");
        choose.setFileFilter(filter);
        choose.showOpenDialog(null);
        File f = choose.getSelectedFile();
        filename = f.getAbsolutePath();

        try {
            FileReader fr = new FileReader(filename);
            BufferedReader br = new BufferedReader(fr);

            DefaultTableModel model = (DefaultTableModel) DataTecordTable.getModel();
            Object[] lines = br.lines().toArray();

            for (int i = 0; i < lines.length; i++) {
                String[] line = lines[i].toString().split(",");
                model.addRow(line);
            }
            JOptionPane.showMessageDialog(rootPane, "Data sucessfully imported from a .csv file.", "Successfully Imported from file path", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "File not found", "Error 404", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ImportActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
          //confirm dialog for exiting system
        int clearConfirmation = JOptionPane.showConfirmDialog(this, "Do you want exit the system?", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (clearConfirmation == 0){
            this.dispose();
            JOptionPane.showMessageDialog(this,"System has been existed successfully !!.","Message",JOptionPane.INFORMATION_MESSAGE); //information display
        }else{
            JOptionPane.showMessageDialog(this,"Welcome back to BookLand!!.","Message",JOptionPane.INFORMATION_MESSAGE); //information display
        }
    }//GEN-LAST:event_ExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deleteframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deleteframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deleteframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deleteframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Deleteframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BookLandLabel;
    private javax.swing.JLabel DataRecord;
    private javax.swing.JTable DataTecordTable;
    private javax.swing.JLabel DeleteBookLabel;
    private javax.swing.JButton DeleteRowButton;
    private javax.swing.JButton DropTableButton;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Export;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Help;
    private javax.swing.JMenuItem Import;
    private javax.swing.JButton ReturnHomeButton;
    private javax.swing.JLabel Slogan;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem manualGuide;
    // End of variables declaration//GEN-END:variables
}
